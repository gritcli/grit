syntax = "proto3";
package grit.v2.api;

option go_package = "github.com/gritcli/grit/api";

service API {
    // Sources lists the configured repository sources.
    rpc Sources(SourcesRequest) returns (SourcesResponse);

    // Resolve resolves repository name, URL or other identifier to a list of
    // candidate repositories.
    rpc Resolve(ResolveRequest) returns (stream ResolveResponse);

    // Clone makes a local clone of a repository from a source.
    rpc Clone(CloneRequest) returns (stream CloneResponse);

    // SuggestRepo returns a list of repository names to be used as
    // suggestions for completing a partial repository name.
    rpc SuggestRepo(SuggestRepoRequest) returns (SuggestResponse);
}

message SourcesRequest {
}

message SourcesResponse {
    repeated Source sources = 1;
}

message Source {
    string name = 1;
    string description = 2;
    string status = 3;
    string clone_dir = 4;
}

message Repo {
    string id = 1;
    string source = 2;
    string name = 3;
    string description = 4;
    string web_url = 5;
}

message ClientOptions {
    bool capture_debug_log = 1;
}

message ClientOutput {
    string message = 1;
    bool is_debug = 2;
}

message ResolveRequest {
    ClientOptions client_options = 1;
    string query = 2;
}

message ResolveResponse {
    oneof response {
        ClientOutput output = 1;
        Repo repo = 2;
    }
}

message CloneRequest {
    ClientOptions client_options = 1;
    string source = 2;
    string repo_id = 3;
}

message CloneResponse {
    oneof response {
        ClientOutput output = 1;
        string directory = 2;
    }
}

message SuggestRepoRequest {
    string word = 1;
    bool include_local = 2;
    bool include_remote = 3;
}

message SuggestResponse {
    repeated string words = 1;
}
