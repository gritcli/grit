// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        v4.22.2
// source: github.com/gritcli/grit/api/api.proto

package api

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Locality int32

const (
	Locality_UNKNOWN_LOCALITY Locality = 0
	Locality_LOCAL            Locality = 1
	Locality_REMOTE           Locality = 2
)

// Enum value maps for Locality.
var (
	Locality_name = map[int32]string{
		0: "UNKNOWN_LOCALITY",
		1: "LOCAL",
		2: "REMOTE",
	}
	Locality_value = map[string]int32{
		"UNKNOWN_LOCALITY": 0,
		"LOCAL":            1,
		"REMOTE":           2,
	}
)

func (x Locality) Enum() *Locality {
	p := new(Locality)
	*p = x
	return p
}

func (x Locality) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Locality) Descriptor() protoreflect.EnumDescriptor {
	return file_github_com_gritcli_grit_api_api_proto_enumTypes[0].Descriptor()
}

func (Locality) Type() protoreflect.EnumType {
	return &file_github_com_gritcli_grit_api_api_proto_enumTypes[0]
}

func (x Locality) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Locality.Descriptor instead.
func (Locality) EnumDescriptor() ([]byte, []int) {
	return file_github_com_gritcli_grit_api_api_proto_rawDescGZIP(), []int{0}
}

type Source struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name         string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Description  string `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	Status       string `protobuf:"bytes,3,opt,name=status,proto3" json:"status,omitempty"`
	BaseCloneDir string `protobuf:"bytes,4,opt,name=base_clone_dir,json=baseCloneDir,proto3" json:"base_clone_dir,omitempty"`
}

func (x *Source) Reset() {
	*x = Source{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_gritcli_grit_api_api_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Source) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Source) ProtoMessage() {}

func (x *Source) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_gritcli_grit_api_api_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Source.ProtoReflect.Descriptor instead.
func (*Source) Descriptor() ([]byte, []int) {
	return file_github_com_gritcli_grit_api_api_proto_rawDescGZIP(), []int{0}
}

func (x *Source) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Source) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Source) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *Source) GetBaseCloneDir() string {
	if x != nil {
		return x.BaseCloneDir
	}
	return ""
}

type RemoteRepo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Source      string `protobuf:"bytes,2,opt,name=source,proto3" json:"source,omitempty"`
	Name        string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Description string `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	WebUrl      string `protobuf:"bytes,5,opt,name=web_url,json=webUrl,proto3" json:"web_url,omitempty"`
}

func (x *RemoteRepo) Reset() {
	*x = RemoteRepo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_gritcli_grit_api_api_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoteRepo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoteRepo) ProtoMessage() {}

func (x *RemoteRepo) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_gritcli_grit_api_api_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoteRepo.ProtoReflect.Descriptor instead.
func (*RemoteRepo) Descriptor() ([]byte, []int) {
	return file_github_com_gritcli_grit_api_api_proto_rawDescGZIP(), []int{1}
}

func (x *RemoteRepo) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *RemoteRepo) GetSource() string {
	if x != nil {
		return x.Source
	}
	return ""
}

func (x *RemoteRepo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *RemoteRepo) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *RemoteRepo) GetWebUrl() string {
	if x != nil {
		return x.WebUrl
	}
	return ""
}

type LocalRepo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RemoteRepo       *RemoteRepo `protobuf:"bytes,1,opt,name=remote_repo,json=remoteRepo,proto3" json:"remote_repo,omitempty"`
	AbsoluteCloneDir string      `protobuf:"bytes,2,opt,name=absolute_clone_dir,json=absoluteCloneDir,proto3" json:"absolute_clone_dir,omitempty"`
}

func (x *LocalRepo) Reset() {
	*x = LocalRepo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_gritcli_grit_api_api_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LocalRepo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LocalRepo) ProtoMessage() {}

func (x *LocalRepo) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_gritcli_grit_api_api_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LocalRepo.ProtoReflect.Descriptor instead.
func (*LocalRepo) Descriptor() ([]byte, []int) {
	return file_github_com_gritcli_grit_api_api_proto_rawDescGZIP(), []int{2}
}

func (x *LocalRepo) GetRemoteRepo() *RemoteRepo {
	if x != nil {
		return x.RemoteRepo
	}
	return nil
}

func (x *LocalRepo) GetAbsoluteCloneDir() string {
	if x != nil {
		return x.AbsoluteCloneDir
	}
	return ""
}

type ClientOptions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Verbose bool `protobuf:"varint,1,opt,name=verbose,proto3" json:"verbose,omitempty"`
}

func (x *ClientOptions) Reset() {
	*x = ClientOptions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_gritcli_grit_api_api_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClientOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClientOptions) ProtoMessage() {}

func (x *ClientOptions) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_gritcli_grit_api_api_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClientOptions.ProtoReflect.Descriptor instead.
func (*ClientOptions) Descriptor() ([]byte, []int) {
	return file_github_com_gritcli_grit_api_api_proto_rawDescGZIP(), []int{3}
}

func (x *ClientOptions) GetVerbose() bool {
	if x != nil {
		return x.Verbose
	}
	return false
}

type ClientOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *ClientOutput) Reset() {
	*x = ClientOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_gritcli_grit_api_api_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClientOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClientOutput) ProtoMessage() {}

func (x *ClientOutput) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_gritcli_grit_api_api_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClientOutput.ProtoReflect.Descriptor instead.
func (*ClientOutput) Descriptor() ([]byte, []int) {
	return file_github_com_gritcli_grit_api_api_proto_rawDescGZIP(), []int{4}
}

func (x *ClientOutput) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type ListSourcesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ListSourcesRequest) Reset() {
	*x = ListSourcesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_gritcli_grit_api_api_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListSourcesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListSourcesRequest) ProtoMessage() {}

func (x *ListSourcesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_gritcli_grit_api_api_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListSourcesRequest.ProtoReflect.Descriptor instead.
func (*ListSourcesRequest) Descriptor() ([]byte, []int) {
	return file_github_com_gritcli_grit_api_api_proto_rawDescGZIP(), []int{5}
}

type ListSourcesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sources []*Source `protobuf:"bytes,1,rep,name=sources,proto3" json:"sources,omitempty"`
}

func (x *ListSourcesResponse) Reset() {
	*x = ListSourcesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_gritcli_grit_api_api_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListSourcesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListSourcesResponse) ProtoMessage() {}

func (x *ListSourcesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_gritcli_grit_api_api_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListSourcesResponse.ProtoReflect.Descriptor instead.
func (*ListSourcesResponse) Descriptor() ([]byte, []int) {
	return file_github_com_gritcli_grit_api_api_proto_rawDescGZIP(), []int{6}
}

func (x *ListSourcesResponse) GetSources() []*Source {
	if x != nil {
		return x.Sources
	}
	return nil
}

type ResolveRepoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClientOptions  *ClientOptions `protobuf:"bytes,1,opt,name=client_options,json=clientOptions,proto3" json:"client_options,omitempty"`
	Query          string         `protobuf:"bytes,2,opt,name=query,proto3" json:"query,omitempty"`
	SourceFilter   []string       `protobuf:"bytes,3,rep,name=source_filter,json=sourceFilter,proto3" json:"source_filter,omitempty"`
	LocalityFilter []Locality     `protobuf:"varint,4,rep,packed,name=locality_filter,json=localityFilter,proto3,enum=grit.v2.api.Locality" json:"locality_filter,omitempty"`
}

func (x *ResolveRepoRequest) Reset() {
	*x = ResolveRepoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_gritcli_grit_api_api_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResolveRepoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResolveRepoRequest) ProtoMessage() {}

func (x *ResolveRepoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_gritcli_grit_api_api_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResolveRepoRequest.ProtoReflect.Descriptor instead.
func (*ResolveRepoRequest) Descriptor() ([]byte, []int) {
	return file_github_com_gritcli_grit_api_api_proto_rawDescGZIP(), []int{7}
}

func (x *ResolveRepoRequest) GetClientOptions() *ClientOptions {
	if x != nil {
		return x.ClientOptions
	}
	return nil
}

func (x *ResolveRepoRequest) GetQuery() string {
	if x != nil {
		return x.Query
	}
	return ""
}

func (x *ResolveRepoRequest) GetSourceFilter() []string {
	if x != nil {
		return x.SourceFilter
	}
	return nil
}

func (x *ResolveRepoRequest) GetLocalityFilter() []Locality {
	if x != nil {
		return x.LocalityFilter
	}
	return nil
}

type ResolveRepoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Response:
	//
	//	*ResolveRepoResponse_Output
	//	*ResolveRepoResponse_LocalRepo
	//	*ResolveRepoResponse_RemoteRepo
	Response isResolveRepoResponse_Response `protobuf_oneof:"response"`
}

func (x *ResolveRepoResponse) Reset() {
	*x = ResolveRepoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_gritcli_grit_api_api_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResolveRepoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResolveRepoResponse) ProtoMessage() {}

func (x *ResolveRepoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_gritcli_grit_api_api_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResolveRepoResponse.ProtoReflect.Descriptor instead.
func (*ResolveRepoResponse) Descriptor() ([]byte, []int) {
	return file_github_com_gritcli_grit_api_api_proto_rawDescGZIP(), []int{8}
}

func (m *ResolveRepoResponse) GetResponse() isResolveRepoResponse_Response {
	if m != nil {
		return m.Response
	}
	return nil
}

func (x *ResolveRepoResponse) GetOutput() *ClientOutput {
	if x, ok := x.GetResponse().(*ResolveRepoResponse_Output); ok {
		return x.Output
	}
	return nil
}

func (x *ResolveRepoResponse) GetLocalRepo() *LocalRepo {
	if x, ok := x.GetResponse().(*ResolveRepoResponse_LocalRepo); ok {
		return x.LocalRepo
	}
	return nil
}

func (x *ResolveRepoResponse) GetRemoteRepo() *RemoteRepo {
	if x, ok := x.GetResponse().(*ResolveRepoResponse_RemoteRepo); ok {
		return x.RemoteRepo
	}
	return nil
}

type isResolveRepoResponse_Response interface {
	isResolveRepoResponse_Response()
}

type ResolveRepoResponse_Output struct {
	Output *ClientOutput `protobuf:"bytes,1,opt,name=output,proto3,oneof"`
}

type ResolveRepoResponse_LocalRepo struct {
	LocalRepo *LocalRepo `protobuf:"bytes,2,opt,name=local_repo,json=localRepo,proto3,oneof"`
}

type ResolveRepoResponse_RemoteRepo struct {
	RemoteRepo *RemoteRepo `protobuf:"bytes,3,opt,name=remote_repo,json=remoteRepo,proto3,oneof"`
}

func (*ResolveRepoResponse_Output) isResolveRepoResponse_Response() {}

func (*ResolveRepoResponse_LocalRepo) isResolveRepoResponse_Response() {}

func (*ResolveRepoResponse_RemoteRepo) isResolveRepoResponse_Response() {}

type CloneRepoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClientOptions *ClientOptions `protobuf:"bytes,1,opt,name=client_options,json=clientOptions,proto3" json:"client_options,omitempty"`
	Source        string         `protobuf:"bytes,2,opt,name=source,proto3" json:"source,omitempty"`
	RepoId        string         `protobuf:"bytes,3,opt,name=repo_id,json=repoId,proto3" json:"repo_id,omitempty"`
}

func (x *CloneRepoRequest) Reset() {
	*x = CloneRepoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_gritcli_grit_api_api_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CloneRepoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CloneRepoRequest) ProtoMessage() {}

func (x *CloneRepoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_gritcli_grit_api_api_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CloneRepoRequest.ProtoReflect.Descriptor instead.
func (*CloneRepoRequest) Descriptor() ([]byte, []int) {
	return file_github_com_gritcli_grit_api_api_proto_rawDescGZIP(), []int{9}
}

func (x *CloneRepoRequest) GetClientOptions() *ClientOptions {
	if x != nil {
		return x.ClientOptions
	}
	return nil
}

func (x *CloneRepoRequest) GetSource() string {
	if x != nil {
		return x.Source
	}
	return ""
}

func (x *CloneRepoRequest) GetRepoId() string {
	if x != nil {
		return x.RepoId
	}
	return ""
}

type CloneRepoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Response:
	//
	//	*CloneRepoResponse_Output
	//	*CloneRepoResponse_LocalRepo
	Response isCloneRepoResponse_Response `protobuf_oneof:"response"`
}

func (x *CloneRepoResponse) Reset() {
	*x = CloneRepoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_gritcli_grit_api_api_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CloneRepoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CloneRepoResponse) ProtoMessage() {}

func (x *CloneRepoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_gritcli_grit_api_api_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CloneRepoResponse.ProtoReflect.Descriptor instead.
func (*CloneRepoResponse) Descriptor() ([]byte, []int) {
	return file_github_com_gritcli_grit_api_api_proto_rawDescGZIP(), []int{10}
}

func (m *CloneRepoResponse) GetResponse() isCloneRepoResponse_Response {
	if m != nil {
		return m.Response
	}
	return nil
}

func (x *CloneRepoResponse) GetOutput() *ClientOutput {
	if x, ok := x.GetResponse().(*CloneRepoResponse_Output); ok {
		return x.Output
	}
	return nil
}

func (x *CloneRepoResponse) GetLocalRepo() *LocalRepo {
	if x, ok := x.GetResponse().(*CloneRepoResponse_LocalRepo); ok {
		return x.LocalRepo
	}
	return nil
}

type isCloneRepoResponse_Response interface {
	isCloneRepoResponse_Response()
}

type CloneRepoResponse_Output struct {
	Output *ClientOutput `protobuf:"bytes,1,opt,name=output,proto3,oneof"`
}

type CloneRepoResponse_LocalRepo struct {
	LocalRepo *LocalRepo `protobuf:"bytes,2,opt,name=local_repo,json=localRepo,proto3,oneof"`
}

func (*CloneRepoResponse_Output) isCloneRepoResponse_Response() {}

func (*CloneRepoResponse_LocalRepo) isCloneRepoResponse_Response() {}

type SuggestReposRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Word           string     `protobuf:"bytes,1,opt,name=word,proto3" json:"word,omitempty"`
	LocalityFilter []Locality `protobuf:"varint,2,rep,packed,name=locality_filter,json=localityFilter,proto3,enum=grit.v2.api.Locality" json:"locality_filter,omitempty"`
}

func (x *SuggestReposRequest) Reset() {
	*x = SuggestReposRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_gritcli_grit_api_api_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SuggestReposRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SuggestReposRequest) ProtoMessage() {}

func (x *SuggestReposRequest) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_gritcli_grit_api_api_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SuggestReposRequest.ProtoReflect.Descriptor instead.
func (*SuggestReposRequest) Descriptor() ([]byte, []int) {
	return file_github_com_gritcli_grit_api_api_proto_rawDescGZIP(), []int{11}
}

func (x *SuggestReposRequest) GetWord() string {
	if x != nil {
		return x.Word
	}
	return ""
}

func (x *SuggestReposRequest) GetLocalityFilter() []Locality {
	if x != nil {
		return x.LocalityFilter
	}
	return nil
}

type SuggestResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Words []string `protobuf:"bytes,1,rep,name=words,proto3" json:"words,omitempty"`
}

func (x *SuggestResponse) Reset() {
	*x = SuggestResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_gritcli_grit_api_api_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SuggestResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SuggestResponse) ProtoMessage() {}

func (x *SuggestResponse) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_gritcli_grit_api_api_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SuggestResponse.ProtoReflect.Descriptor instead.
func (*SuggestResponse) Descriptor() ([]byte, []int) {
	return file_github_com_gritcli_grit_api_api_proto_rawDescGZIP(), []int{12}
}

func (x *SuggestResponse) GetWords() []string {
	if x != nil {
		return x.Words
	}
	return nil
}

var File_github_com_gritcli_grit_api_api_proto protoreflect.FileDescriptor

var file_github_com_gritcli_grit_api_api_proto_rawDesc = []byte{
	0x0a, 0x25, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x67, 0x72, 0x69,
	0x74, 0x63, 0x6c, 0x69, 0x2f, 0x67, 0x72, 0x69, 0x74, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x70,
	0x69, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0b, 0x67, 0x72, 0x69, 0x74, 0x2e, 0x76, 0x32,
	0x2e, 0x61, 0x70, 0x69, 0x22, 0x7c, 0x0a, 0x06, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x24, 0x0a, 0x0e,
	0x62, 0x61, 0x73, 0x65, 0x5f, 0x63, 0x6c, 0x6f, 0x6e, 0x65, 0x5f, 0x64, 0x69, 0x72, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x62, 0x61, 0x73, 0x65, 0x43, 0x6c, 0x6f, 0x6e, 0x65, 0x44,
	0x69, 0x72, 0x22, 0x83, 0x01, 0x0a, 0x0a, 0x52, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x70,
	0x6f, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a,
	0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x17, 0x0a, 0x07, 0x77, 0x65, 0x62, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x77, 0x65, 0x62, 0x55, 0x72, 0x6c, 0x22, 0x73, 0x0a, 0x09, 0x4c, 0x6f, 0x63, 0x61,
	0x6c, 0x52, 0x65, 0x70, 0x6f, 0x12, 0x38, 0x0a, 0x0b, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x5f,
	0x72, 0x65, 0x70, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x72, 0x69,
	0x74, 0x2e, 0x76, 0x32, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x52,
	0x65, 0x70, 0x6f, 0x52, 0x0a, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6f, 0x12,
	0x2c, 0x0a, 0x12, 0x61, 0x62, 0x73, 0x6f, 0x6c, 0x75, 0x74, 0x65, 0x5f, 0x63, 0x6c, 0x6f, 0x6e,
	0x65, 0x5f, 0x64, 0x69, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x61, 0x62, 0x73,
	0x6f, 0x6c, 0x75, 0x74, 0x65, 0x43, 0x6c, 0x6f, 0x6e, 0x65, 0x44, 0x69, 0x72, 0x22, 0x29, 0x0a,
	0x0d, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x18,
	0x0a, 0x07, 0x76, 0x65, 0x72, 0x62, 0x6f, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x07, 0x76, 0x65, 0x72, 0x62, 0x6f, 0x73, 0x65, 0x22, 0x28, 0x0a, 0x0c, 0x43, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x22, 0x14, 0x0a, 0x12, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x44, 0x0a, 0x13, 0x4c, 0x69, 0x73, 0x74,
	0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x2d, 0x0a, 0x07, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x13, 0x2e, 0x67, 0x72, 0x69, 0x74, 0x2e, 0x76, 0x32, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x53,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x07, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x22, 0xd2,
	0x01, 0x0a, 0x12, 0x52, 0x65, 0x73, 0x6f, 0x6c, 0x76, 0x65, 0x52, 0x65, 0x70, 0x6f, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x41, 0x0a, 0x0e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f,
	0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x72, 0x69, 0x74, 0x2e, 0x76, 0x32, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x43, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x0d, 0x63, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x71, 0x75, 0x65, 0x72,
	0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x12, 0x23,
	0x0a, 0x0d, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18,
	0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0c, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x46, 0x69, 0x6c,
	0x74, 0x65, 0x72, 0x12, 0x3e, 0x0a, 0x0f, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x5f,
	0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0e, 0x32, 0x15, 0x2e, 0x67,
	0x72, 0x69, 0x74, 0x2e, 0x76, 0x32, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x4c, 0x6f, 0x63, 0x61, 0x6c,
	0x69, 0x74, 0x79, 0x52, 0x0e, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x46, 0x69, 0x6c,
	0x74, 0x65, 0x72, 0x22, 0xcb, 0x01, 0x0a, 0x13, 0x52, 0x65, 0x73, 0x6f, 0x6c, 0x76, 0x65, 0x52,
	0x65, 0x70, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x33, 0x0a, 0x06, 0x6f,
	0x75, 0x74, 0x70, 0x75, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x72,
	0x69, 0x74, 0x2e, 0x76, 0x32, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x48, 0x00, 0x52, 0x06, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74,
	0x12, 0x37, 0x0a, 0x0a, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x5f, 0x72, 0x65, 0x70, 0x6f, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x67, 0x72, 0x69, 0x74, 0x2e, 0x76, 0x32, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x52, 0x65, 0x70, 0x6f, 0x48, 0x00, 0x52, 0x09,
	0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x52, 0x65, 0x70, 0x6f, 0x12, 0x3a, 0x0a, 0x0b, 0x72, 0x65, 0x6d,
	0x6f, 0x74, 0x65, 0x5f, 0x72, 0x65, 0x70, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17,
	0x2e, 0x67, 0x72, 0x69, 0x74, 0x2e, 0x76, 0x32, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x52, 0x65, 0x6d,
	0x6f, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6f, 0x48, 0x00, 0x52, 0x0a, 0x72, 0x65, 0x6d, 0x6f, 0x74,
	0x65, 0x52, 0x65, 0x70, 0x6f, 0x42, 0x0a, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x86, 0x01, 0x0a, 0x10, 0x43, 0x6c, 0x6f, 0x6e, 0x65, 0x52, 0x65, 0x70, 0x6f, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x41, 0x0a, 0x0e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x5f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x72, 0x69, 0x74, 0x2e, 0x76, 0x32, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x43, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x0d, 0x63, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x12, 0x17, 0x0a, 0x07, 0x72, 0x65, 0x70, 0x6f, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x70, 0x6f, 0x49, 0x64, 0x22, 0x8d, 0x01, 0x0a, 0x11, 0x43,
	0x6c, 0x6f, 0x6e, 0x65, 0x52, 0x65, 0x70, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x33, 0x0a, 0x06, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x19, 0x2e, 0x67, 0x72, 0x69, 0x74, 0x2e, 0x76, 0x32, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x43,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x48, 0x00, 0x52, 0x06, 0x6f,
	0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x37, 0x0a, 0x0a, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x5f, 0x72,
	0x65, 0x70, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x67, 0x72, 0x69, 0x74,
	0x2e, 0x76, 0x32, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x52, 0x65, 0x70,
	0x6f, 0x48, 0x00, 0x52, 0x09, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x52, 0x65, 0x70, 0x6f, 0x42, 0x0a,
	0x0a, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x69, 0x0a, 0x13, 0x53, 0x75,
	0x67, 0x67, 0x65, 0x73, 0x74, 0x52, 0x65, 0x70, 0x6f, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x12, 0x0a, 0x04, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x3e, 0x0a, 0x0f, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x69, 0x74,
	0x79, 0x5f, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0e, 0x32, 0x15,
	0x2e, 0x67, 0x72, 0x69, 0x74, 0x2e, 0x76, 0x32, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x4c, 0x6f, 0x63,
	0x61, 0x6c, 0x69, 0x74, 0x79, 0x52, 0x0e, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x46,
	0x69, 0x6c, 0x74, 0x65, 0x72, 0x22, 0x27, 0x0a, 0x0f, 0x53, 0x75, 0x67, 0x67, 0x65, 0x73, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x77, 0x6f, 0x72, 0x64,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x2a, 0x37,
	0x0a, 0x08, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x12, 0x14, 0x0a, 0x10, 0x55, 0x4e,
	0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x5f, 0x4c, 0x4f, 0x43, 0x41, 0x4c, 0x49, 0x54, 0x59, 0x10, 0x00,
	0x12, 0x09, 0x0a, 0x05, 0x4c, 0x4f, 0x43, 0x41, 0x4c, 0x10, 0x01, 0x12, 0x0a, 0x0a, 0x06, 0x52,
	0x45, 0x4d, 0x4f, 0x54, 0x45, 0x10, 0x02, 0x32, 0xc9, 0x02, 0x0a, 0x03, 0x41, 0x50, 0x49, 0x12,
	0x50, 0x0a, 0x0b, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x12, 0x1f,
	0x2e, 0x67, 0x72, 0x69, 0x74, 0x2e, 0x76, 0x32, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x4c, 0x69, 0x73,
	0x74, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x20, 0x2e, 0x67, 0x72, 0x69, 0x74, 0x2e, 0x76, 0x32, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x4c, 0x69,
	0x73, 0x74, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x52, 0x0a, 0x0b, 0x52, 0x65, 0x73, 0x6f, 0x6c, 0x76, 0x65, 0x52, 0x65, 0x70, 0x6f,
	0x12, 0x1f, 0x2e, 0x67, 0x72, 0x69, 0x74, 0x2e, 0x76, 0x32, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x52,
	0x65, 0x73, 0x6f, 0x6c, 0x76, 0x65, 0x52, 0x65, 0x70, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x20, 0x2e, 0x67, 0x72, 0x69, 0x74, 0x2e, 0x76, 0x32, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x52, 0x65, 0x73, 0x6f, 0x6c, 0x76, 0x65, 0x52, 0x65, 0x70, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x30, 0x01, 0x12, 0x4c, 0x0a, 0x09, 0x43, 0x6c, 0x6f, 0x6e, 0x65, 0x52, 0x65,
	0x70, 0x6f, 0x12, 0x1d, 0x2e, 0x67, 0x72, 0x69, 0x74, 0x2e, 0x76, 0x32, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x43, 0x6c, 0x6f, 0x6e, 0x65, 0x52, 0x65, 0x70, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x1e, 0x2e, 0x67, 0x72, 0x69, 0x74, 0x2e, 0x76, 0x32, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x43, 0x6c, 0x6f, 0x6e, 0x65, 0x52, 0x65, 0x70, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x30, 0x01, 0x12, 0x4e, 0x0a, 0x0c, 0x53, 0x75, 0x67, 0x67, 0x65, 0x73, 0x74, 0x52, 0x65,
	0x70, 0x6f, 0x73, 0x12, 0x20, 0x2e, 0x67, 0x72, 0x69, 0x74, 0x2e, 0x76, 0x32, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x53, 0x75, 0x67, 0x67, 0x65, 0x73, 0x74, 0x52, 0x65, 0x70, 0x6f, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x67, 0x72, 0x69, 0x74, 0x2e, 0x76, 0x32, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x53, 0x75, 0x67, 0x67, 0x65, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x42, 0x1d, 0x5a, 0x1b, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f,
	0x6d, 0x2f, 0x67, 0x72, 0x69, 0x74, 0x63, 0x6c, 0x69, 0x2f, 0x67, 0x72, 0x69, 0x74, 0x2f, 0x61,
	0x70, 0x69, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_github_com_gritcli_grit_api_api_proto_rawDescOnce sync.Once
	file_github_com_gritcli_grit_api_api_proto_rawDescData = file_github_com_gritcli_grit_api_api_proto_rawDesc
)

func file_github_com_gritcli_grit_api_api_proto_rawDescGZIP() []byte {
	file_github_com_gritcli_grit_api_api_proto_rawDescOnce.Do(func() {
		file_github_com_gritcli_grit_api_api_proto_rawDescData = protoimpl.X.CompressGZIP(file_github_com_gritcli_grit_api_api_proto_rawDescData)
	})
	return file_github_com_gritcli_grit_api_api_proto_rawDescData
}

var file_github_com_gritcli_grit_api_api_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_github_com_gritcli_grit_api_api_proto_msgTypes = make([]protoimpl.MessageInfo, 13)
var file_github_com_gritcli_grit_api_api_proto_goTypes = []interface{}{
	(Locality)(0),               // 0: grit.v2.api.Locality
	(*Source)(nil),              // 1: grit.v2.api.Source
	(*RemoteRepo)(nil),          // 2: grit.v2.api.RemoteRepo
	(*LocalRepo)(nil),           // 3: grit.v2.api.LocalRepo
	(*ClientOptions)(nil),       // 4: grit.v2.api.ClientOptions
	(*ClientOutput)(nil),        // 5: grit.v2.api.ClientOutput
	(*ListSourcesRequest)(nil),  // 6: grit.v2.api.ListSourcesRequest
	(*ListSourcesResponse)(nil), // 7: grit.v2.api.ListSourcesResponse
	(*ResolveRepoRequest)(nil),  // 8: grit.v2.api.ResolveRepoRequest
	(*ResolveRepoResponse)(nil), // 9: grit.v2.api.ResolveRepoResponse
	(*CloneRepoRequest)(nil),    // 10: grit.v2.api.CloneRepoRequest
	(*CloneRepoResponse)(nil),   // 11: grit.v2.api.CloneRepoResponse
	(*SuggestReposRequest)(nil), // 12: grit.v2.api.SuggestReposRequest
	(*SuggestResponse)(nil),     // 13: grit.v2.api.SuggestResponse
}
var file_github_com_gritcli_grit_api_api_proto_depIdxs = []int32{
	2,  // 0: grit.v2.api.LocalRepo.remote_repo:type_name -> grit.v2.api.RemoteRepo
	1,  // 1: grit.v2.api.ListSourcesResponse.sources:type_name -> grit.v2.api.Source
	4,  // 2: grit.v2.api.ResolveRepoRequest.client_options:type_name -> grit.v2.api.ClientOptions
	0,  // 3: grit.v2.api.ResolveRepoRequest.locality_filter:type_name -> grit.v2.api.Locality
	5,  // 4: grit.v2.api.ResolveRepoResponse.output:type_name -> grit.v2.api.ClientOutput
	3,  // 5: grit.v2.api.ResolveRepoResponse.local_repo:type_name -> grit.v2.api.LocalRepo
	2,  // 6: grit.v2.api.ResolveRepoResponse.remote_repo:type_name -> grit.v2.api.RemoteRepo
	4,  // 7: grit.v2.api.CloneRepoRequest.client_options:type_name -> grit.v2.api.ClientOptions
	5,  // 8: grit.v2.api.CloneRepoResponse.output:type_name -> grit.v2.api.ClientOutput
	3,  // 9: grit.v2.api.CloneRepoResponse.local_repo:type_name -> grit.v2.api.LocalRepo
	0,  // 10: grit.v2.api.SuggestReposRequest.locality_filter:type_name -> grit.v2.api.Locality
	6,  // 11: grit.v2.api.API.ListSources:input_type -> grit.v2.api.ListSourcesRequest
	8,  // 12: grit.v2.api.API.ResolveRepo:input_type -> grit.v2.api.ResolveRepoRequest
	10, // 13: grit.v2.api.API.CloneRepo:input_type -> grit.v2.api.CloneRepoRequest
	12, // 14: grit.v2.api.API.SuggestRepos:input_type -> grit.v2.api.SuggestReposRequest
	7,  // 15: grit.v2.api.API.ListSources:output_type -> grit.v2.api.ListSourcesResponse
	9,  // 16: grit.v2.api.API.ResolveRepo:output_type -> grit.v2.api.ResolveRepoResponse
	11, // 17: grit.v2.api.API.CloneRepo:output_type -> grit.v2.api.CloneRepoResponse
	13, // 18: grit.v2.api.API.SuggestRepos:output_type -> grit.v2.api.SuggestResponse
	15, // [15:19] is the sub-list for method output_type
	11, // [11:15] is the sub-list for method input_type
	11, // [11:11] is the sub-list for extension type_name
	11, // [11:11] is the sub-list for extension extendee
	0,  // [0:11] is the sub-list for field type_name
}

func init() { file_github_com_gritcli_grit_api_api_proto_init() }
func file_github_com_gritcli_grit_api_api_proto_init() {
	if File_github_com_gritcli_grit_api_api_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_github_com_gritcli_grit_api_api_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Source); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_gritcli_grit_api_api_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoteRepo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_gritcli_grit_api_api_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LocalRepo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_gritcli_grit_api_api_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClientOptions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_gritcli_grit_api_api_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClientOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_gritcli_grit_api_api_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListSourcesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_gritcli_grit_api_api_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListSourcesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_gritcli_grit_api_api_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResolveRepoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_gritcli_grit_api_api_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResolveRepoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_gritcli_grit_api_api_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CloneRepoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_gritcli_grit_api_api_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CloneRepoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_gritcli_grit_api_api_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SuggestReposRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_gritcli_grit_api_api_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SuggestResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_github_com_gritcli_grit_api_api_proto_msgTypes[8].OneofWrappers = []interface{}{
		(*ResolveRepoResponse_Output)(nil),
		(*ResolveRepoResponse_LocalRepo)(nil),
		(*ResolveRepoResponse_RemoteRepo)(nil),
	}
	file_github_com_gritcli_grit_api_api_proto_msgTypes[10].OneofWrappers = []interface{}{
		(*CloneRepoResponse_Output)(nil),
		(*CloneRepoResponse_LocalRepo)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_github_com_gritcli_grit_api_api_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   13,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_github_com_gritcli_grit_api_api_proto_goTypes,
		DependencyIndexes: file_github_com_gritcli_grit_api_api_proto_depIdxs,
		EnumInfos:         file_github_com_gritcli_grit_api_api_proto_enumTypes,
		MessageInfos:      file_github_com_gritcli_grit_api_api_proto_msgTypes,
	}.Build()
	File_github_com_gritcli_grit_api_api_proto = out.File
	file_github_com_gritcli_grit_api_api_proto_rawDesc = nil
	file_github_com_gritcli_grit_api_api_proto_goTypes = nil
	file_github_com_gritcli_grit_api_api_proto_depIdxs = nil
}
