syntax = "proto3";
package grit.v2.api;

option go_package = "github.com/gritcli/grit/internal/api";

service API {
    // ListSources lists the configured repository sources.
    rpc ListSources(ListSourcesRequest) returns (ListSourcesResponse);

    // ResolveRepoName resolves a repository name to a list of candidate
    // repositories.
    rpc ResolveRepoName(ResolveRepoNameRequest) returns (stream ResolveRepoNameResponse);

    // CloneRepository clones a remote repository.
    rpc CloneRepository(CloneRepositoryRequest) returns (CloneRepositoryResponse);
}

message ListSourcesRequest {
}

message ListSourcesResponse {
    repeated Source sources = 1;
}

message Source {
    string name = 1;
    string description = 2;
}

message Repo {
    string source_name = 1;
    string repo_id = 2;
    string repo_name = 3;
    string description = 4;
    string web_url = 5;
}

message ResolveRepoNameRequest {
    string name = 1;
}

message ResolveRepoNameResponse {
    Repo repo = 1;
}

message CloneRepositoryRequest {
    string source_name = 1;
    string repo_id = 2;
}

message CloneRepositoryResponse {
    string directory = 1;
}
